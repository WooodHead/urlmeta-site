var langs = {
	"shell": "\n // simply send a GET a request \n // with target URL in <i>url</i> parameter\n\ncurl --request GET \ \n  --url 'https://api.urlmeta.org/?url=https://startupbundle.com'\n\n",
	"php" : "\n&lt;?php\n\n  $url 	   = urlencode( 'https://startupbundle.com' );\n  $urlmeta = file_get_contents( 'https://api.urlmeta.org/?url='. $url );\n  $urlmeta = json_decode( $urlmeta );\n  print_r( $urlmeta );\n\n?&gt;",
	"ajax": 'var url = encodeURIComponent("https://startupbundle.com");\nvar settings = {\n  "async": true,\n  "crossDomain": true,\n  "url": "https://api.urlmeta.org/?url=" + url,\n  "method": "GET",\n};\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});',
	"xhr" : 'var url = encodeURIComponent("https://startupbundle.com"), data = null;\n\nvar xhr = new XMLHttpRequest();\n\nxhr.addEventListener("readystatechange", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open("GET", "https://api.urlmeta.org/?url=" + url);\n\nxhr.send(data);',
	"nodejs": 'var http = require("https");\n\nvar options = {\n  "method": "GET",\n  "hostname": "api.urlmeta.org",\n  "port": null,\n  "path": "/?url=https://startupbundle.com",\n  "headers": {}\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on("data", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on("end", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();',
	"ruby": 'require \'uri\'\nrequire \'net/http\'\n\nurl = URI("https://api.urlmeta.org/?url=https://startupbundle.com")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body',
	"python": 'import http.client\n\nconn = http.client.HTTPSConnection("api.urlmeta.org")\n\nconn.request("GET", "/?url=https://startupbundle.com")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode("utf-8"))',
	"swift": 'import Foundation\n\nvar request = NSMutableURLRequest(URL: NSURL(string: "https://api.urlmeta.org/?url=https://startupbundle.com")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = "GET"\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()',
	"go": 'package main\n\nimport (\n  "fmt"\n  "net/http"\n  "io/ioutil"\n)\n\nfunc main() {\n\n  url := "https://api.urlmeta.org/?url=https://startupbundle.com"\n\n  req, _ := http.NewRequest("GET", url, nil)\n\n  res, _ := http.DefaultClient.Do(req)\n\n  defer res.Body.Close()\n  body, _ := ioutil.ReadAll(res.Body)\n\n  fmt.Println(res)\n  fmt.Println(string(body))\n\n}',
	"obec": '#import <Foundation/Foundation.h>\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"https://api.urlmeta.org/?url=https://startupbundle.com"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@"GET"];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@"%@", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@"%@", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];',
	"java": 'OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url("https://api.urlmeta.org/?url=https://startupbundle.com")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();',
}